{
  "name": "layout",
  "description": "Organize and layout items based on various algorithms",
  "version": "1.3.1",
  "homepage": "https://github.com/twolfson/layout",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/layout.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/layout/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/layout/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/layout",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.3.12"
  },
  "keywords": [
    "layout",
    "blueprint",
    "organize",
    "pack",
    "algorithm"
  ],
  "dependencies": {
    "binpacking": "0.0.1"
  },
  "readme": "# layout [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/)\n\nOrganize and layout items based on various algorithms\n\n## Getting Started\nInstall the module with: `npm install layout`\n\n```javascript\n// Load in layout\nvar layout = require('layout');\n\n// Generate a new layer to organize items on\nvar layer = layout('top-down');\n\n// Add items that you want to organize\nlayer.addItem({'height': 20, 'width': 10, 'meta': 'medium'});\nlayer.addItem({'height': 10, 'width': 10, 'meta': 'small'});\nlayer.addItem({'height': 50, 'width': 40, 'meta': 'large'});\n\n// Export the info\nvar info = layer['export']();\n\n// We get back the width and height of the pack as well as organized items\n{\n    height: 80,\n    width: 40,\n    items: [{\n        height: 10,\n        width: 10,\n        meta: 'small',\n        x: 0,\n        y: 0\n    }, {\n        height: 20,\n        width: 10,\n        meta: 'medium',\n        x: 0,\n        y: 10\n    }, {\n        height: 50,\n        width: 40,\n        meta: 'large',\n        x: 0,\n        y: 30\n    }]\n}\n```\n\n## Documentation\nLayout is a constructor function\n```js\n/**\n * Layout adds items in an algorithmic fashion\n * @constructor\n * @param {String|Function} [algorithm=\"top-down\"] Name of algorithm or custom algorithm to use\n * Algorithms available: top-down, left-right, diagonal, alt-diagonal, binary-tree\n */\n```\n\nItems can be added via `addItem` which are required to have a `height` and `width`. Any additional info should be stored inside of `meta`.\n```js\n/**\n * @param {Object} item Item to store -- this currently is mutated in-memory\n * @param {Number} item.width Width of the item\n * @param {Number} item.height Height of the item\n * @param {Mixed} [item.meta] Any meta data you would like to store related to the item\n */\n```\n\n`export` is how you take your items and organize them.\n```js\n/**\n * @returns {Object} retObj\n * @returns {Number} retObj.height Height of the processed layout\n * @returns {Number} retObj.width Width of the processed layout\n * @returns {Mixed[]} retObj.items Organized items\n */\n```\n\n### Custom algorithms\nYou can add your own algorithm via `layout.addAlgorithm`\n```js\n/**\n * Method to add new algorithms via\n * @param {String} name Name of algorithm\n * @param {Function} algorithm Algorithm to bind under name\n */\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "layout@1.3.1",
  "_from": "layout@~1.3.0"
}
