{
  "name": "binpacking",
  "version": "0.0.1",
  "author": {
    "name": "Jake Gordon"
  },
  "description": "binary tree based bin packing algorithm",
  "contributors": [
    {
      "name": "Markus",
      "email": "nixmrak@gmail.com"
    }
  ],
  "main": "./js/index.js",
  "repository": {
    "type": "git",
    "url": "https://jsmarkus@github.com/jsmarkus/node-bin-packing.git"
  },
  "keywords": [
    "bin packing",
    "2d",
    "geometry",
    "css-sprites"
  ],
  "license": "MIT",
  "engine": {
    "node": ">=0.4"
  },
  "readme": "Binary Tree Algorithm for 2D Bin Packing\n========================================\n\nThis project is a javascript experiment to write a binary tree based\nbin packing algorithm that is suitable for generating\n[CSS sprites](https://github.com/jakesgordon/sprite-factory).\n\n * You can play with the [demo here](http://codeincomplete.com/posts/2011/5/7/bin_packing/example/)\n * You can find a [description here](http://codeincomplete.com/posts/2011/5/7/bin_packing/)\n\n\nNodeJS demo\n============\n\n > Note: the node demo is quick and dirty. Npm support, test suite coming soon...\n\nClone this repository:\n\n    git clone https://github.com/jsmarkus/node-bin-packing\n\nSee usage example: https://github.com/jsmarkus/node-bin-packing/blob/master/node-test.js\n\nRun the demo:\n\n    node node-test.js\n\nDemo\n====\n\nClone this repository\n\n    git clone https://github.com/jsmarkus/node-bin-packing\n\nView the index.html file in your favorite browser for examples of algorithm in use with lots of configurable options.\n\nUsage\n=====\n\nIf you want to use this in your own javascript projects, you need something like this:\n\n    <script src='packer.growing.js'></script>\n    <script>\n      var packer = new Packer(1000, 1000);   // or:  new GrowingPacker();\n      var blocks = [\n        { w: 100, h: 100 },\n        { w: 100, h: 100 },\n        { w:  80, h:  80 },\n        { w:  80, h:  80 },\n        etc\n        etc\n      ];\n\n      blocks.sort(function(a,b) { return (b.h < a.h); }); // sort inputs for best results\n      packer.fit(blocks);\n  \n      for(var n = 0 ; n < blocks.length ; n++) {\n        var block = blocks[n];\n        if (block.fit) {\n          DrawRectangle(block.fit.x, block.fit.y, block.w, block.h);\n        }\n      }\n    </script>\n\nSee source code comments for more details.\n\nLicense\n=======\n\nSee [LICENSE](https://github.com/jakesgordon/bin-packing/blob/master/LICENSE) file.\n\nContact\n=======\n\nIf you have any ideas, feedback, requests or bug reports, you can reach me at\n[jake@codeincomplete.com](mailto:jake@codeincomplete.com), or via\nmy website: [Code inComplete](http://codeincomplete.com/posts/2011/5/7/bin_packing/)\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jsmarkus/node-bin-packing/issues"
  },
  "homepage": "https://github.com/jsmarkus/node-bin-packing",
  "_id": "binpacking@0.0.1",
  "_from": "binpacking@0.0.1"
}
