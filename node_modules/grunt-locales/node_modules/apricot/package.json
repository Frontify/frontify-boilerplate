{
  "name": "apricot",
  "version": "0.0.6",
  "description": "Apricot is a HTML / DOM parser, scraper for Nodejs. It is inspired by rubys hpricot and designed to fetch, iterate, and augment html or html fragments.",
  "keywords": [
    "dom",
    "javascript",
    "xui"
  ],
  "maintainers": [
    {
      "name": "Rob Ellis",
      "email": "rob@silentrob.me",
      "url": "http://silentrob.me"
    }
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/silentrob/Apricot/blob/master/LICENSE.txt"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "http://github.com/silentrob/Apricot.git"
    }
  ],
  "dependencies": {
    "jsdom": "> 0.2",
    "node-sizzle": "*"
  },
  "os": [
    "linux",
    "macos",
    "darwin",
    "win"
  ],
  "cpu": [
    "x86",
    "ppc",
    "x86_64",
    "x64"
  ],
  "engines": [
    "node"
  ],
  "directories": {
    "lib": "lib"
  },
  "main": "./lib/apricot",
  "readme": "Apricot\n===\n\nApricot is a HTML / DOM parser, scraper for Nodejs.\nIt is inspired by [rubys hpricot](http://github.com/whymirror/hpricot) and designed to fetch, iterate, and augment html or html fragments.\n\n\nInstall\n---\n\n    npm install apricot\n\n    \nGetting Started\n---\n    Apricot.parse(\"<p id='test'>An HTML Fragment</p>\", function(err, doc) {\n      // Do something awesome here..\n    });\n    \n    // OR Open a remote website, or local file\n    \n    Apricot.open(\"http://my_awesome_website.com\", function(err, doc) {\n      // Do something awesome here..\n    });    \n\n    // Experimental Live Code, third param.\n    // Live mode will evaluate all javascript in the context of the page.\n    \n    Apricot.open( file, callback, live_mode)\n    Apricot.open(\"http://my_awesome_website.com\", function(doc) {\n      // Do something awesome here..\n    },true);\n\nPacked with Awesomeness (API)\n---\n\nParse and Open both return a Apricot Object, a HTML DOM, created by JSDOM, with all the power of the [Sizzle Selector Engine](http://wiki.github.com/jeresig/sizzle/), and [XUI Framework](http://github.com/silentrob/xui) for Augmentation.\n\n    Apricot.parse(\"<p id='test'>An HTML Fragment</p>\", function(doc) {\n      doc.find(\"selector\");     // Populates internal collection, See Sizzle selector syntax (rules)\n      doc.each(callback);       // Itterates over the collection, applying a callback to each match (element)\n      doc.remove();             // Removes all elements in the internal collection (See XUI Syntax)\n    \n      doc.inner(\"fragment\");    // See XUI Syntax\n      doc.outer(\"fragment\");    // See XUI Syntax    \n      doc.top(\"fragment\");      // See XUI Syntax\n      doc.bottom(\"fragment\");   // See XUI Syntax\n      doc.before(\"fragment\");   // See XUI Syntax\n      doc.after(\"fragment\");    // See XUI Syntax\n      doc.hasClass(\"class\");    // See XUI Syntax      \n      doc.addClass(\"class\");    // See XUI Syntax            \n      doc.removeClass(\"class\"); // See XUI Syntax            \n      \n      doc.toHTML;               // Returns the HTML\n      doc.innerHTML;            // Returns the innerHTML of the body.\n      doc.toDOM;                // Returns the DOM representation\n      \n      // Most methods are chainable, so this works\n      doc.find(\"selector\").addClass('foo').after(\", just because\");\n      \n    });\n    \n\nProblems?\n---\nApricot requires [JSDom](http://github.com/tmpvar/jsdom) and [htmlparser](http://github.com/tautologistics/node-htmlparser), these should be brought in via npm when you install apricot, but if you have problems\n\n    $ npm install jsdom\n    $ npm install htmlparser    \n\nContributors\n---\n* alexkappa \n* lancefisher\n* brog45\n* vrutberg \n* chandlerkent\n* jamesaduncan\n\nTODO \n---\n* Cleanup Code, hide privates, etc.\n* Tests\n\nLICENSE (MIT)\n---\n\n_Copyright (c) 2010 Rob Ellis_\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "http://github.com/silentrob/Apricot.git"
  },
  "bugs": {
    "url": "https://github.com/silentrob/Apricot/issues"
  },
  "homepage": "https://github.com/silentrob/Apricot",
  "_id": "apricot@0.0.6",
  "dist": {
    "shasum": "c66e5b33a94ff0e020b286630388a4de09322cbe"
  },
  "_from": "apricot@0.0.6",
  "_resolved": "https://registry.npmjs.org/apricot/-/apricot-0.0.6.tgz"
}
