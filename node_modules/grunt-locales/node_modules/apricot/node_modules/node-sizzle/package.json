{
  "name": "node-sizzle",
  "version": "0.1.0",
  "author": {
    "name": "Blagovest Dachev - http://github.com/dachev"
  },
  "description": "Sizzle powered selectors for libxmljs",
  "keywords": [
    "dom",
    "sizzle",
    "jquery",
    "html",
    "xml"
  ],
  "bugs": {
    "url": "http://github.com/dachev/node-sizzle/issues"
  },
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": ">=0.1.102"
  },
  "licenses": [
    {
      "type": "GPL",
      "url": "http://github.com/dachev/node-sizzle/blob/master/LICENSE.txt"
    }
  ],
  "dependencies": {
    "libxmljs": ">=0.4.0"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/node-sizzle",
  "readme": "node-sizzle\n=====================================\nA [node.js](http://github.com/ry/node) plugin that brings [sizzle](http://github.com/jeresig/sizzle) and [libxmljs](http://github.com/polotek/libxmljs) together. Currently it passes all relevant sizzle tests when used with an HTML document.\n\n## Requirements\n- Node v0.1.102+\n- libxmljs v0.4.0+\n\n## How to install\n    npm install node-sizzle\n\n## How to test\nTo run the tests, go to the project's root directory and run\n    node test.js\n\n## Demo\nTo run the tests, go to the `examples` directory and run\n    node web.js\n\n## How to use\n    var http     = require('http'),\n        events   = require('events'),\n        inherits = require('sys').inherits,\n        dominiq  = require('node-sizzle/dominiq'),\n        sizzFact = require('node-sizzle');\n    \n    function WebClient(host, path) {\n        var self       = this,\n            transport  = http.createClient(80, host),\n            request    = transport.request('GET', path, {'host': host});\n            \n        request.end();\n        \n        request.on('response', function (response) {\n            if (response.statusCode != 200) {\n                self.emit('done', response.statusCode, '');\n            }\n            else {\n                var html = '';\n            \n                response.setEncoding('utf8');\n                response.on('data', function (chunk) {\n                    html += chunk;\n                });\n                response.on('end', function (chunk) {\n                    self.emit('done', 200, html);\n                });\n            }\n        });\n    }\n    inherits(WebClient, events.EventEmitter);\n    \n    var client = new WebClient('www.yahoo.com', '/');\n    client.on('done', function(status, html) {\n        if (status != 200) {\n            throw 'unable to download page';\n        }\n    \n        var doc      = dominiq.createHTMLDocument(html),\n            window   = {document:doc},\n            sizzle   = sizzFact.sizzleInit(window),\n            divs     = sizzle('div');\n    \n        for (var i = 0; i < divs.length; i++) {\n            console.log(divs[i].toString());\n        }\n    });\n    \n",
  "readmeFilename": "README.md",
  "_id": "node-sizzle@0.1.0",
  "dist": {
    "shasum": "6a9dc5e9278b35fa7792fab262defd4f707cb37f"
  },
  "_from": "node-sizzle@*",
  "_resolved": "https://registry.npmjs.org/node-sizzle/-/node-sizzle-0.1.0.tgz"
}
